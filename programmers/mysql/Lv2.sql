-- 동물 수 구하기
SELECT COUNT(*) AS count FROM ANIMAL_INS;

-- 동명 동물 수 찾기
SELECT NAME, COUNT(*) AS COUNT 
FROM ANIMAL_INS
GROUP BY NAME 
HAVING NAME IS NOT NULL AND COUNT(*) > 1
ORDER BY NAME;

-- 중복 제거하기
SELECT COUNT(DISTINCT NAME) AS count FROM ANIMAL_INS;

-- 최솟값 구하기
SELECT DATETIME AS 시간 FROM ANIMAL_INS ORDER BY DATETIME LIMIT 1;

-- 이름에 el이 들어가는 동물 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE NAME LIKE '%el%' AND ANIMAL_TYPE = 'Dog'
ORDER BY NAME;

-- NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME,'No name'), SEX_UPON_INTAKE
FROM ANIMAL_INS;

-- DATETIME에서 DATE로 형 변환
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME, '%Y-%m-%d') AS '날짜'
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

-- 가격이 제일 비싼 식품의 정보 출력하기
SELECT * FROM FOOD_PRODUCT ORDER BY PRICE DESC LIMIT 1;

-- 중성화 여부 파악하기
SELECT ANIMAL_ID, NAME, 
IF(
    SEX_UPON_INTAKE LIKE 'Neutered%'
    OR
    SEX_UPON_INTAKE LIKE 'Spayed%', 'O','X') AS '중성화'
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

-- 고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(*) AS count
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE;

-- 입양 시각 구하기(1)
-- HOUR(DATETIME) = CAST(DATE_FORMAT(DATETIME, '%H') AS UNSIGNED)
SELECT HOUR(DATETIME) as HOUR, COUNT(*) AS COUNT
FROM ANIMAL_OUTS
WHERE HOUR(DATETIME) > 8 AND HOUR(DATETIME) < 20
GROUP BY HOUR(DATETIME)
ORDER BY HOUR(DATETIME);

-- 진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD AS '진료과코드', COUNT(*) AS '5월예약건수'
FROM APPOINTMENT
WHERE DATE_FORMAT(APNT_YMD, '%Y-%m') = '2022-05'
GROUP BY MCDP_CD
ORDER BY COUNT(*), MCDP_CD;

-- 자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
SELECT CAR_TYPE, COUNT(*) AS CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE '%시트%'
GROUP BY CAR_TYPE
ORDER BY CAR_TYPE;

-- 조건에 맞는 도서와 저자 리스트 출력하기
SELECT BOOK.BOOK_ID, AUTHOR.AUTHOR_NAME, DATE_FORMAT(BOOK.PUBLISHED_DATE, '%Y-%m-%d') AS PUBLISHED_DATE
FROM BOOK
INNER JOIN AUTHOR
ON BOOK.AUTHOR_ID = AUTHOR.AUTHOR_ID
WHERE BOOK.CATEGORY = '경제'
ORDER BY PUBLISHED_DATE;

-- 성분으로 구분한 아이스크림 총 주문량
SELECT ICECREAM_INFO.INGREDIENT_TYPE, ROUND(SUM(FIRST_HALF.TOTAL_ORDER)) AS TOTAL_ORDER
FROM FIRST_HALF
INNER JOIN ICECREAM_INFO
ON FIRST_HALF.FLAVOR = ICECREAM_INFO.FLAVOR
GROUP BY ICECREAM_INFO.INGREDIENT_TYPE;

-- 재구매가 일어난 상품과 회원 리스트 구하기
-- 내가 짜본,, self join을 이용한 풀이방법
select sale1.USER_ID as USER_ID, sale1.PRODUCT_ID as PRODUCT_ID
from ONLINE_SALE sale1, ONLINE_SALE sale2
where 
sale1.USER_ID = sale2.USER_ID 
AND 
sale1.PRODUCT_ID = sale2.PRODUCT_ID
AND
sale1.ONLINE_SALE_ID != sale2.ONLINE_SALE_ID
GROUP BY sale1.USER_ID, sale1.PRODUCT_ID
ORDER BY sale1.USER_ID, sale1.PRODUCT_ID DESC

-- group by를 2번 사용하며 푼 방법
select USER_ID, PRODUCT_ID
from ONLINE_SALE
group by USER_ID, PRODUCT_ID
having count(*) >= 2
order by USER_ID, PRODUCT_ID DESC;

-- 조건에 부합하는 중고거래 상태 조회하기
SELECT BOARD_ID, WRITER_ID, TITLE, PRICE, 
CASE STATUS
    WHEN 'SALE' THEN '판매중'
    WHEN 'RESERVED' THEN '예약중'
    WHEN 'DONE' THEN '거래완료'
    END
FROM USED_GOODS_BOARD 
WHERE DATE_FORMAT(CREATED_DATE,'%Y-%m-%d') = '2022-10-05' 
ORDER BY BOARD_ID DESC;